{"version":3,"sources":["components/ContactForm/ContactForm.component.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.component.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.component.js","components/Filter/Filter.js","components/Section/Section.js","GlobalStyles.component.js","components/App.js","index.js"],"names":["Form","styled","form","Input","input","Button","button","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","addContact","reset","this","onSubmit","type","placeholder","onChange","disabled","length","Component","Contacts","div","Item","li","ContactListItem","onRemove","onClick","ContactList","contacts","map","key","FilterStyle","Filter","Section","title","children","GlobalStyled","createGlobalStyle","App","filter","removeContact","updatedContacts","newName","toLowerCase","includes","alert","getVisibleContacts","persistedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e656f9ab.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  width: 400px;\r\n  height: 100px;\r\n  outline: 2px solid black;\r\n  position: relative;\r\n  padding: 20px;\r\n`;\r\nForm.Input = styled.input`\r\n  position: absolute;\r\n  right: 10px;\r\n  width: 300px;\r\n`;\r\nForm.Button = styled.button`\r\n  width: 350px;\r\n  margin: 20px auto;\r\n  margin-left: 8px;\r\n  border: 2px solid black;\r\n  color: black;\r\n`;\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Form from \"./ContactForm.component\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Form>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name:\r\n            <Form.Input\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              placeholder=\"enter the name...\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Number:\r\n            <Form.Input\r\n              type=\"tel\"\r\n              value={number}\r\n              name=\"number\"\r\n              placeholder=\"enter the number...\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <Form.Button type=\"submit\" disabled={!name.length || !number.length}>\r\n            Add contact\r\n          </Form.Button>\r\n        </form>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Contacts = styled.div`\r\n  width: 400px;\r\n  height: auto;\r\n  outline: 2px solid black;\r\n  position: relative;\r\n  padding: 20px;\r\n`;\r\nContacts.Item = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Contacts from \"./ContactList.component\";\r\n\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => {\r\n  return (\r\n    <Contacts.Item>\r\n      <p>\r\n        {name} : {number}\r\n      </p>\r\n\r\n      <button type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </Contacts.Item>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport Contacts from \"./ContactList.component\";\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  return (\r\n    <Contacts>\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onRemove={() => onRemove(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n    </Contacts>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\n\r\nconst FilterStyle = styled.div`\r\n  padding: 20px;\r\n  width: 400px;\r\n`;\r\nexport default FilterStyle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FilterStyle from \"./Filter.component\";\r\n\r\n\r\nconst Filter = ({ onChange  }) => {\r\n  return (\r\n    <FilterStyle>\r\n      Find contacts by name:\r\n      <input type=\"text\" name=\"filter\" onChange ={onChange} />\r\n    </FilterStyle>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyled = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nbody {\r\n  margin: 0;\r\n  padding: 20px;\r\n  font-family: Arial, sans-serif;\r\n  padding-bottom: 20px;\r\n  background: -webkit-linear-gradient(to right, #78ffd6, #a8ff78);  /* Chrome 10-25, Safari 5.1-6 */\r\n  background: linear-gradient(to right, #78ffd6, #a8ff78); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n\r\n}\r\nli {\r\n    list-style-type: none;\r\n}\r\n`;\r\n\r\nexport default GlobalStyled;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Section from \"./Section/Section\";\r\nimport GlobalStyled from \"../GlobalStyles.component\";\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem(\"contacts\");\r\n\r\n    if (persistedContacts) {\r\n      this.setState({ contacts: JSON.parse(persistedContacts) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  removeContact = (id) => {\r\n    const { contacts } = this.state;\r\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\r\n    this.setState({\r\n      contacts: [...updatedContacts],\r\n    });\r\n  };\r\n\r\n  addContact = (contact) => {\r\n    const newName = contact.name;\r\n    const names = this.state.contacts.map((contact) =>\r\n      contact.name.toLowerCase()\r\n    );\r\n    if (names.includes(newName.toLowerCase())) {\r\n      alert(`${newName} is already in contact list`);\r\n    } else {\r\n      this.setState((state) => ({\r\n        contacts: [...state.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    if (contacts.length) {\r\n      return contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase())\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contacts } = this.state;\r\n    return (\r\n      <>\r\n        <GlobalStyled />\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm addContact={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          {contacts.length > 1 && <Filter onChange={this.handleChange} />}\r\n          {contacts.length ? (\r\n            <ContactList\r\n              contacts={this.getVisibleContacts()}\r\n              onRemove={this.removeContact}\r\n            />\r\n          ) : (\r\n            <p>There are no contacts here</p>\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}